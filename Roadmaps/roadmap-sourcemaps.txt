
                      
   ROADMAP-SOURCEMAPS  
                      



Should target Node 6.0

Separate the content|location utility checker

*-source-map:
  - index maps???
  - other tools like concat???
  - dir recursion on any above???
  - streaming???
  - GitHub/npm organization "sourcemaps" and @sourcemaps scope (@sourcemaps/has)
  - regex
  - has(content|location)->BOOL
      - tries to fetch sibling `.map` file like get()
  - get(content|location)->{ location, inline, multiline }
      - location is either external URI|path or full data URI
      - no format nor mime check
      - no base64 nor JSON parsing
      - inline is boolean
      - tries to fetch sibling `.map` file:
         - do it in parallel right away
         - but only use it if no sourceMappingURL comment
  - remove(content)->content
  - set(content, location[, { inline, multiline }])->content
      - remove() then append
  - validate(sourcemapContent|sourcemapLocation)[->ERROR]
      - check source map syntax
  - fetch(sourcemapLocation|res[, { cwd }])->{ location, inline, multiline, sourcemap, validate }
      - check format and MIME if data URI
      - base64 decoding if data URI
      - HTTP[S] fetch or local file read if external
      - JSON parsing
      - validate() if true (def: false)
  - read(content|location[, { cwd }])->{ location, inline, multiline, sourcemap, validate }
      - get()
      - fetch()
  - write(path, sourcemap[, { cwd, inline, multiline, validate }]):
      - set()
      - validate() if true (def: false)
      - persist file
      - persist source map (unless inline)
  - delete(path[, { cwd }]):
      - remove() but persist file and remove source map file too
  - transform(path, function[, { cwd, inline, multiline, validate }])
  - copy():
     - can do token-by-token mapping when creating a new source map like IDENTITY-MAP does,
       i.e. by parsing with language-specific parser
        - fallback to line-by-line mapping

Documentation check:
  - check old source map versions differences
  - fix source map documentation about uri vs path

source-map-transform:
  - from path
      - file or dir
  - pass transducer function of source map
  - can return undefined to remove source map
  - option to call transducer with undefined if no source map
  - option for source map type, comment type (def: keep same, or external + single line for new source maps)
  - option: cwd

support //# sourceURL

Vinyl support???
