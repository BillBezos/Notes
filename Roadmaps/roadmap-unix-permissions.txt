
                            
   ROADMAP-UNIX-PERMISSIONS  
                            



symbolic -> tokens (loseless)
tokens -> symbolic (loseless) (use = if possible)
number -> tokens (loseless) (considered as specifying everything)
tokens -> number (loseful) (if missing -> 0)
mode -> tokens
tokens -> mode
octal -> number
number -> octal

Support "Mode" like "[CHAR]rwx---rwx"
  - similar handling as number

Support 'OCTAL'
  - might have a leading 0
  - should always serialize to 4 digits

setuid / setgid / sticky:
  - setuid|setgid:
     - noop if on "o"
     - symbolic: s
     - mode: S instead of x (if not x) or s instead of x (if x)
     - number: 1024 (on "g") or 2048 (on "u")
  - sticky:
     - noop unless on "o"
     - symbolic: t
     - mode: T instead of x (if not x) or t instead of x (if x)
     - number: 512
  - X (symbolic): like x

PERM is 'SYMBOLIC'|NUM|'OCTAL'|'MODE'

isSymbolic|Mode|Number|Octal(PERM)->BOOL (including invalid)

isValid(PERM)->BOOL

toSymbolic|Number|Octal|Mode(PERM)->'SYMBOLIC'|NUM|'OCTAL'|'MODE'

has(PERM, PERM2)->BOOL
hasFlags(PERM)->BOOL (has setuid, setgid or sticky bit)
set(PERM, PERM2)->PERM
invert(PERM)->PERM (does not invert special flags)
unset(PERM, PERM2)->PERM

Moize what needs to be moized

Wrap native Node.js calls that use those (chmod(), fs.stat(), umask(), etc.)

Todo:
  - symbolic notation like "a+o", i.e. "o" means "permissions of o" (this is supported by Unix chmod)
  - symbolic notation X should be noop if "u", "g" and "o" do not have "x"
  - symbolic notation like "a=555" (this is supported by Unix chmod)
