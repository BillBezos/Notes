
                           
   ROADMAP-SOURCE-MAP-COPY  
                           



Goal: copy|move directory/file without breaking source maps

API:
  - copy|move('PATH', 'PATH2')
  - CLI binary too

After copy|move ORIG_FILE DEST_FILE, for each regular DEST_FILE:
  - fetches source map (using convert-source-map) (any format, including inline)
  - if there is a source map:
     - modify its sourceRoot:
        - if sourceRoot absolute: do nothing
        - if sourceRoot relative: normalize as absolute as path.posix.resolve(process.cwd(), dirname(ORIG_FILE), sourceRoot)
           - note: source map format only allows forward slashes
        - if sourceRoot absent:
           - if all "sources" are absolute: do nothing
           - set as path.posix.resolve(process.cwd(), dirname(ORIG_FILE))
     - save source map (using convert-source-map) (same format as the one originally fetched)
  - if there is no source map:
     - generate source map:
        - version: 3
        - sourceRoot: ORIG_DIR (i.e. common ancestors of all ORIG_FILE)
        - file: relative path from ORIG_DIR to ORIG_FILE, i.e. path.posix.relative(ORIG_DIR, ORIG_FILE)
        - sources: [basename(ORIG_FILE)]
        - sourcesContent: [JSON.stringify(readFile(ORIG_FILE, { encoding: 'utf-8' }))]
        - names: nothing
        - mappings: use source-list-map modules (i.e. line-by-line mapping)
           - (new SourceListNode(sourcesContent, file, sourcesContent)).getMappings(new MappingsContext)
     - save source map (using convert-source-map) as either:
        - comment + sibling *.map
        - comment + inline data URI (if OPTS.inline true (def: false))
