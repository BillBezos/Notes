
             
   COVERALLS  
             



ALTERNATIVES ==>              #  - istanbul HTML reporter (prefered)
                              #  - coveralls (prefered if really needs history)
                              #  - codecov: very similar but slightly less high-profile

GOAL ==>                      #SaaS online LCOV reporting
                              #Also notify on changes

COVERALLS ==>                 #Nice coverage reports, with commit history.
                              #When using Travis:
                              #  - Automatic pull requests commenting.
                              #  - when defined, command line coveralls (and so Gulp plugins, etc.) use:
                              #     - ENVVAR TRAVID_JOB_ID: service_job_id
                              #     - TRAVIS_COMMIT: git_commit
                              #     - TRAVIS_BRANCH: git_branch
                              #     - "travis_ci": service_name
                              #Also supports Jenkins, Circle CI, Codeship
                              #Notifications: email, hipchat, campfile, webhook

coveralls                     #Command line (Node module 3.0.2)
                              #Upload LCOV to Coveralls. Read *.lcov from stdin.
                              #Uses ENVVAR:
                              #  - COVERALLS_SERVICE_NAME
                              #  - COVERALLS_REPO_TOKEN
                              #  - COVERALLS_SERVICE_JOB_ID
                              #  - COVERALLS_RUN_AT DATE_STR (automatically defined)
                              #  - COVERALLS_GIT_COMMIT COMMIT_ID (e.g. HEAD) (automatically defined if in repo)
                              #  - COVERALLS_GIT_BRANCH LBRANCH (automatically defined if in repo)
                              #Can also use root file .coveralls.yml with service_name, repo_token, etc.
-v                            #

-v|--verbose
COVERALLS.options.verbose
ENVVAR NODE_COVERALLS_DEBUG=1 #
-s|--stdout
COVERALLS.options.stdout      #

COVERALLS.handleInput('LCOV', FUNC([ERROR]))

POST https://coveralls.io/api/v1/jobs


GULP-COVERALLS()              #Takes lcov files in input, do same thing as command line coveralls
                              #Version 0.1.2

KARMA-COVERALLS               #REPORTER that sends lcov (like command line coveralls).
                              #Should be after "coverage" REPORTER, putting lcov[only] in ./coverage/
                              #Version 0.1.4

REST API ==>                  #POST https://coveralls.io/api/v1/jobs
                              #  - repo_token STR:
                              #     - repository secret access token
                              #     - only required if no service_name and service_job_id
                              #  - service_name STR: CI name (e.g. "travis[-pro]")
                              #  - service_job_id STR: e.g. TRAVIS_JOB_ID
                              #  - source_files OBJ_ARR:
                              #     - name 'PATH'
                              #     - source_digest 'MD5'
                              #     - coverage 'LCOV'
                              #  - git:
                              #     - head: id COMMIT_ID, author|committer_name|email, message
                              #     - branch LBRANCH
                              #     - remotes: name, url
                              #  - run_at 'DATE'

STATUS IMAGE ==>              #https://img.shields.io/coveralls/github/USER/REPO[/LBRANCH].svg linking to
                              #https://coveralls.io/r/USER/REPO?branch=LBRANCH
                              #Or https://coveralls.io/repos/USER/REPO/badge.svg
