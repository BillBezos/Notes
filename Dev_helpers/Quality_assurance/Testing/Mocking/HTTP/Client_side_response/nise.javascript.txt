
        
   NISE  
        



VERSION ==>                       #1.3.2

SINON.useFakeXMLHttpRequest()
 ->SINONXHR                       #Mocks XMLHttpRequest (client-side)
SINONXHR.restore()                #

SINONXHR.addFilter                #Don't mock request made to XHR.open(...) if BOOL true and
(FUNC(...)->BOOL)                 #SINONXHR.useFilters is true (def: false)
                                  #Does't seem to work.

SINONXHR.onCreate = FUNC(XHR)     #When a request is sent.
                                  #Must set up XHR then use XHR.respond(...)
XHR                               #Inherits from real XHR
XHR.url                           #
XHR.method                        #
XHR.requestHeaders                #OBJ
XHR.requestBody                   #STR
XHR.username|password             #
XHR.async                         #BOOL

XHR.status                        #NUM
XHR.statusText                    #STR
XHR.getResponseHeader('VAR')->VAL #
XHR.setResponseHeader('VAR', VAL) #
XHR.getAllResponseHeaders()->OBJ  #
XHR.response[Text]                #STR
XHR.responseXML                   #DOCUMENT
XHR.setResponseBody(STR)          #
XHR.respond(UINT, OBJ, STR)       #Respond to a request. UINT is status code, OBJ is headers, STR is body.
XHR.autoRespond                   #If true, respond after XHR.autoRespondAfter (def: 10, in ms)


SINON.fakeServer[WithClock].      #Calls SINON.useFakeXMLHttpRequest()
 create()->FAKESERVER             #FAKESERVER is a higher-level API above XHR
                                  #Use "WithClock" if using SINON.useFakeTimers()
FAKESERVER.restore()              #

FAKESERVER.respondWith            #Do XHR.respond() to requests matching METHOD and PATH.
([['METHOD',]PATH_STR|REGEXP,]VAL)#Response is according to VAL:
                                  #  - [UINT, OBJ, STR]: XHR.respond(...)
                                  #  - STR: same as [200, {}, STR]
                                  #  - FUNC(XHR, ...):
                                  #     - must call XHR.respond()
                                  #     - if REGEXP, also pass parenthesis groups as additional arguments
                                  #XHR not matching anything will get [404, {}, '']
                                  #Responses are queued until FAKESERVER.respond() is called.
                                  #Must be called before actual requests.
FAKESERVER.autoRespond            #If true, respond after FAKESERVER.autoRespondAfter (def: 10)
FAKESERVER.respondImmediately     #If true, respond after 0ms
FAKESERVER.respond()              #
