
        
   NISE  
        



VERSION ==>                       #1.3.2
                                  #Mocks XMLHttpRequest (client-side)

NISE.fakeXhr.
 useFakeXMLHttpRequest()->FAKEXHR #Mocks XMLHttpRequest
NISE.fakeXhr.xhr.XMLHttpRequest   #Unmocked XMLHttpRequest
FAKEXHR.restore()                 #

FAKEXHR.addFilter
(FUNC(...)->BOOL)                 #Don't mock request made to XHR.open(...) if BOOL true
FAKEXHR.useFilters                #BOOL (def: false). Turns on FAKEXHR.addFilter()

FAKEXHR.onCreate = FUNC(XHR)      #When a request is sent.
                                  #Must set up XHR then use XHR.respond(...)
XHR                               #Inherits from real XHR
XHR.url                           #
XHR.method                        #
XHR.requestHeaders                #OBJ
XHR.requestBody                   #STR
XHR.username|password             #
XHR.async                         #BOOL

XHR.status                        #NUM
XHR.setStatus(NUM)                #
XHR.statusText                    #STR
XHR.getResponseHeader('VAR')->VAL #
XHR.getAllResponseHeaders()->OBJ  #
XHR.setResponseHeaders(OBJ)       #
XHR.response[Text]                #STR
XHR.responseXML                   #DOCUMENT
XHR.setResponseBody(STR)          #
XHR.respond(UINT, OBJ, STR)       #Respond to a request. UINT is status code, OBJ is headers, STR is body.
XHR.error()                       #Simulate a network error.
XHR.autoRespond                   #If true, respond after XHR.autoRespondAfter (def: 10, in ms)


NISE.fakeServer[WithClock].       #Calls NISE.fakeXhr.useFakeXMLHttpRequest()
 create([OPTS])->FAKESERVER       #FAKESERVER is a higher-level API above XHR
                                  #Use "WithClock" if using LOLEX.install() (see its doc)
FAKESERVER.configure(OPTS)        #
FAKESERVER.restore()              #

FAKESERVER.respondWith            #Do XHR.respond() to requests matching METHOD and PATH.
([['METHOD',]PATH_STR|REGEXP,]VAL)#Response is according to VAL:
                                  #  - [UINT, OBJ, STR]: XHR.respond(...)
                                  #  - STR|ARRAYBUFFER: same as [200, {}, STR]
                                  #  - FUNC(XHR, ...):
                                  #     - must call XHR.respond()
                                  #     - if REGEXP, also pass parenthesis groups as additional arguments
                                  #XHR not matching anything will get [404, {}, '']
                                  #Responses are queued until FAKESERVER.respond() is called.
                                  #Must be called before actual requests.
FAKESERVER.respond()              #
FAKESERVER.autoRespond            #If true, respond after FAKESERVER.autoRespondAfter (def: 10)
FAKESERVER.respondImmediately     #If true, respond after 0ms
