
           
   JASMINE  
           



ALTERNATIVES ==>                                #See Mocha

VERSION ==>                                     #3.1.0
                                                #Node.js, CLI or browser

SPIES/MOCKS ==>                                 #See jasmine-spies doc
CLOCK/TIMERS ==>                                #See jasmine-timers doc

Jasmine                                         #require('jasmine')
JASMINE                                         #GLOBAL.jasmine


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             TESTS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


[x|f]describe(STR[, FUNC()])                    #Test suite.
                                                #Can be nested.
                                                #x or not using FUNC() to skip
                                                #f: for only running this suite
[x|f]it(STR[, FUNC([FUNC2]])                    #Test case.
                                                #Async if:
                                                #  - FUNC2 defined
                                                #  - PROMISE returned
                                                #Fails if:
                                                #  - error thrown
                                                #  - calling FUNC2(ERROR)
                                                #  - calling [FUNC2.]fail(STR|ERROR) (better stack trace)
                                                #  - returned PROMISE is rejected
                                                #x|f: like describe() except can also call pending([STR])

before|afterAll|Each(FUNC([FUNC2]))             #Fire FUNC() before|after once|before_each in current describe()
                                                #(or all if outside)
this                                            #OBJ shared by it|before|after*() inside given describe()
                                                #Shallow copied by each it()
                                                #Avoid arrow functions to keep right `this`

JASMINE.DEFAULT_TIMEOUT_INTERVAL                #Test timeout (def: 5000)
                                                #Can also use last argument NUM to it|before|after*()


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              RUN              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CONF                                            #Located at:
                                                #  - ENVVAR JASMINE_CONFIG_PATH
                                                #  - jasmine --config=PATH
                                                #  - def: './spec/support/jasmine.json'
jasmine init                                    #Adds default CONF file

jasmine [FILE...]                               #Run tests
                                                #Def FILEs are:
                                                #  - CONF.spec_files|helpers 'FILE'_ARR
                                                #     - def: '**/*[sS]pec.js' and 'helpers/**/*.js'
                                                #     - can include globbing, including globstar
                                                #     - helpers are loaded first
                                                #  - CONF.spec_dir: prefix 'DIR' prepended to CONF.spec_files|helpers
                                                #    (def: 'spec/')
--no-color                                      #

--filter="REGEXP"                               #Only run tests that partially match REGEXP

--stop-on-failure=BOOL                          #Stop it() on EXPECT failure.
                                                #Can also use CONF.stopSpecOnExpectationFailure BOOL (def: false)
--fail-fast=BOOL                                #Stop jasmine on it() failure

--random=BOOL                                   #Random order.
                                                #Can also use CONF.random BOOL (def: true).
--seed=NUM                                      #With --random


BROWSER ==>                                     #See online doc
                                                #Def reporters are HtmlReporter and JsApiReporter


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:         PROGRAMMATIC          :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


new Jasmine([OPTS])                             #JASMINE
JASMINE.loadConfigFile('PATH')
JASMINE.loadConfig(CONF)                        #
JASMINE.execute(['PATH'[_ARR][, 'FILTER']])     #
JASMINE.onComplete(FUNC(BOOL))                  #BOOL is true if any failed
                                                #Def: process.exit()

GULP-JASMINE([OBJ])                            ##Gulp plugin (3.0.0)
                                               ##Uses jasmine 2.8.0 and jasmine-terminal-reporter 1.0.0
                                               ##OBJ:
                                               ##  - config OPTS
                                               ##  - reporter REPORTER[_ARR]
                                               ##  - verbose BOOL (def: false)
                                               ##  - timeout NUM (def: 5000)
                                               ##  - includeStackTrace BOOL (def: false)
                                               ##  - errorOnFail BOOL (def: true)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           REPORTERS           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


REPORTER ==>                                    #Output of the test runner
                                                #Def is ConsoleReporter + JsApiReporter

jasmine --reporter=REPORTER                     #Most REPORTER do not support this

JASMINE.env()                                   #ENV
ENV.clearReporters()                            #
ENV.addReporter(REPORTER)                       #

REPORTER.*(...)                                 #Can all be async by using extra FUNC argument or returning PROMISE
REPORTER.jasmineStarted(OBJ)                    #OBJ:
                                                #  - totalSpecsDefined NUM
                                                #  - order 'random|'
REPORTER.jasmineDone(OBJ)                       #OBJ:
                                                #  - overallStatus 'passed|failed|incomplete'
                                                #  - incompleteReason STR
                                                #  - order 'random|'
                                                #  - failedExpectations|deprecationWarnings OBJ_ARR: see below
REPORTER.suiteStarted|Done(SUITE)               #SUITE:
                                                #  - id STR: opaque id
                                                #  - description STR: from describe(STR)
                                                #  - fullName "[PARENT_DESCRIPTION] DESCRIPTION"
                                                #  - failedExpectations|deprecationWarnings OBJ_ARR: see below
REPORTER.specStarted|Done(TEST)                 #TEST:
                                                #  - id STR
                                                #  - description|fullName STR: same as above, but for it(STR)
                                                #    (fullName concatene suite fullName)
                                                #  - status 'pending|passed|failed': only define for specDone
                                                #  - pendingReason STR
                                                #  - failedExpectations|passedExpectations|deprecationWarnings OBJ_ARR:
                                                #     - actual VAL
                                                #     - expected VAL2 or, if several, ARR_VAL
                                                #     - matcherName STR: e.g. "toEqual"
                                                #     - message STR: e.g. "Expected VAL to equal VAL2"
                                                #     - passed BOOL
                                                #     - stack STR: stack error message

new JASMINE.ConsoleReporter([OPTS])             #REPORTER, with OPTS:
                                                #  - print([STR...]): e.g. console.log
                                                #  - timer:
                                                #     - OBJ: start(), elapsed()->NUM (in ms)
                                                #     - should use new JASMINE.Timer()
                                                #  - showColors BOOL (def: false)
                                                #  - onComplete FUNC: like JASMIN.onComplete()

new JASMINE.JsApiReporter([OPTS])               #REPORTER, with OPTS:
                                                #  - timer: like ConsoleReporter
jsApiReporter                                   #JSAPIREPORTER
JSAPIREPORTER.executionTime()->NUM              #
JSAPIREPORTER.status()->STR                     #
JSAPIREPORTER.suites()->SUITE_ARR               #
JSAPIREPORTER.suiteResults(NUM, NUM2)->SUITE_ARR#Same with ARR.slice(...)
JSAPIREPORTER.specs()->TEST_ARR                 #
JSAPIREPORTER.specResults(NUM, NUM2)->TEST_ARR  #Same with ARR.slice(...)

new JASMINE.HtmlReporter([OPTS])                #REPORTER.
                                                #Look at boot.js to customize (e.g. do in a <div> instead of <body>)

ENVVAR MAX_PRETTY_PRINT_ARRAY_LENGTH            #Def: 50
ENVVAR MAX_PRETTY_PRINT_CHARS                   #Def: 1000
ENVVAR MAX_PRETTY_PRINT_DEPTH                   #Def: 8

new SpecReporter([OPTS])                       ##Nice reporter similar to Mocha's spec (prefer)
                                               ##Module 'jasmine-spec-reporter' (4.2.1)
                                               ##OPTS:
                                               ##  - suite:
                                               ##     - displayNumber BOOL (def: false): prepend suite name with incrementing number
                                               ##  - spec (each spec):
                                               ##     - displayErrorMessages BOOL (def: true)
                                               ##     - displayStackTrace BOOL (def: false)
                                               ##     - displaySuccessful|Failed|Pending BOOL (def: false)
                                               ##     - displayDuration BOOL (def: false)
                                               ##  - summary (summary at end):
                                               ##     - displayErrorMessages BOOL (def: true)
                                               ##     - displayStackTrace BOOL (def: false)
                                               ##     - displaySuccessful|Failed|Pending BOOL (def: true only for Failed)
                                               ##     - displayDuration BOOL (def: true)
                                               ##  - colors (using colors.js):
                                               ##     - enabled BOOL (def: true)
                                               ##     - successful|failed|pending 'COLOR'
                                               ##  - prefixes:
                                               ##     - successful|failed|pending 'COLOR'
                                               ##  - stacktrace:
                                               ##     - filter(STR)->STR: filter stack trace
                                               ##  - print (like other reporters)
                                               ##  - customProcessors OBJ_ARR, customOptions OBJ: customized output (see online doc)

new TerminalReporter([OPTS])                   ##Nicer reporter
                                               ##Module 'jasmine-reporters' (2.3.0)
                                               ##OPTS:
                                               ##  - color BOOL (def: false)
                                               ##  - verbosity 0-3 (def: 2)
                                               ##  - showStack BOOL (def: false)

new TapReporter()                              ##TAP reporter
                                               ##Module 'jasmine-reporters'

new JUnitXmlReporter([OPTS])                   ##JUnit XML reporter
                                               ##Module 'jasmine-reporters'

new NUnitXmlReporter([OPTS])                   ##NUnit XML reporter
                                               ##Module 'jasmine-reporters'

new AppVeyorReporter([OPTS])                   ##AppVeyor reporter
                                               ##Module 'jasmine-reporters'

new TeamCityReporter()                         ##TeamCity reporter
                                               ##Module 'jasmine-reporters'


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            ESLINT             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                                    ##Module 'eslint-plugin-jasmine' (2.9.3)
                                               ##There is a recommended set where all rules are on warnings except:
                                               ##  - disabled: missing-expect, named-spy, no-assign-spyon, no-describe-variables
                                               ##  - errors (not warnings): no-focused-tests, no-global-setup,
                                               ##    no-suite-callback-args

jasmine/new-line-between-declarations          ##Must use newline between siblings describe|it|after|before*()
jasmine/new-line-before-expect                 ##Must use newline before expect(), unless it is first statement

jasmine/no-describe-variables                  ##No declarations inside describe() (i.e. only describe|it|after|before*())
jasmine/no-global-setup                        ##Avoid before|after*() outside of describe()
jasmine/no-suite-callback-args                 ##Avoid passing arguments to describe()'s FUNC

jasmine/no-disabled-tests                      ##Avoid xdescribe|xit()
jasmine/no-focused-tests                       ##Avoid fdescribe|fit()

jasmine/no-spec|suite-dupes [STR]              ##Avoid duplicated title in it|describe(...)
                                               ##If STR 'branch' (def: 'block'), takes into account parent describe()

jasmine/expect-single-argument                 ##Avoid expect() with no argument
jasmine/expect-matcher                         ##expect(...) must be followed by an assertion
jasmine/prefer-jasmine-matcher                 ##Use proper assertion function when available
jasmine/missing-expect ['FUNC()'...]           ##Each it() must contain at least one FUNC() (def: 'expect()')
jasmine/no-expect-in-setup-teardown
 ['FUNC()'...]                                 ##Avoid FUNC() (def: 'expect()') in before|after*()

jasmine/no-assign-spyon                        ##Avoid VAR = spyOn(...)
jasmine/no-unsafe-spy                          ##spyOn|createSpy[Obj]() must be called inside it|before|after*()
jasmine/named-spy                              ##Avoid createSpy() with no 'FUNC' argument, or assigned to a variable with
                                               ##a different name
jasmine/prefer-toHaveBeenCalledWith            ##Prefer EXPECT_SPYFUNC.toHaveBeenCalledWith() over toHaveBeenCalled()
                                               ##Except for EXCEPT_SPYFUNC.not.toHaveBeenCalled()
