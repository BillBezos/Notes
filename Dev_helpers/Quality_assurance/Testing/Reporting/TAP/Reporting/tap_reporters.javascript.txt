
                 
   TAP_REPORTERS  
                 



TAP-DOT ==>                      ##1.0.5
                                 ##Dot minimal:
                                 ##  - for each assertion:
                                 ##     - dot green|red according to "[not] ok"
                                 ##  - final summary:
                                 ##     - number of assertions total|passed|failed
                                 ##     - errors: print each assertion 'ASSERT_TITLE' and YAML error props (as is)
                                 ##Parses with tap-out
                                 ##Sets exit code 1 if any failed assertion
dot                              ##Uses stdin|stdout


TAP-SPEC ==>                     ##4.1.1
                                 ##Spec-like:
                                 ##  - for each test: 'TEST_TITLE'
                                 ##  - for each assertion:
                                 ##     - 'ASSERT_TITLE'
                                 ##     - green|red|cyan if ok|no ok|skip
                                 ##     - YAML error props (as is)
                                 ##  - for each unknown line: as is
                                 ##  - final summary:
                                 ##     - number of assertions total|passed|failed
                                 ##     - each failed assertion 'ASSERT_TITLE', grouped by TEST_TITLE
                                 ##     - duration
                                 ##Parses with tap-out
                                 ##Sets exit code 1 if any failed assertion
tap-spec                         ##Uses stdin|stdout
TAP-SPEC([OPTS])->IOSTREAM       ##OPTS:
                                 ##  - padding STR (def: '  ')


TAP-NYAN ==>                     ##1.1.0
                                 ##Nyan cat:
                                 ##  - incrementally showing:
                                 ##     - number of assertions total|passed|failed
                                 ##  - final summary:
                                 ##     - each failed assertion 'TEST_TITLE: ASSERT_TITLE'
                                 ##Parses with tap-parser
                                 ##Sets exit code 1 if any failed assertion
tap-nyan                         ##Uses stdin|stdout
TAP-NYAN()->IOSTREAM             ##


TAP-MIN ==>                      ##1.1.0
                                 ##Sentence minimal:
                                 ##  - final summary:
                                 ##     - number of assertions passed|failed
                                 ##     - each failed assertion 'TEST_TITLE: ASSERT_TITLE'
                                 ##     - each unknown line (considered a failure)
                                 ##Parses with tap-parser
                                 ##Sets exit code 1 if any failed assertion
tap-min                          ##Uses stdin|stdout
TAP-MIN()->IOSTREAM              ##


TAP-DIFFLET ==>                  ##0.7.1
                                 ##Spec-like with diff:
                                 ##  - for each test: 'TEST_TITLE'
                                 ##  - for each assertion:
                                 ##     - 'ASSERT_TITLE'
                                 ##     - green|red if ok|not ok
                                 ##     - YAML error props:
                                 ##        - expected|wanted and actual|found: colored diff (using difflet)
                                 ##        - "at": pretty printed
                                 ##        - others: as is
                                 ##     - only failed assertions if OPTS.pessimistic true (def: false)
                                 ##  - for each unknown line: as is
                                 ##  - final summary:
                                 ##     - number of assertions passed|failed
                                 ##     - duration
                                 ##Parses with tap-parser-yaml
                                 ##Sets exit code 1 if any failed assertion
tap-difflet                      ##Uses stdin|stdout
--pessimistic|p                  ##
TAP-DIFFLET([OPTS])->IOSTREAM    ##


TAP-DIFF ==>                     ##0.1.1
                                 ##Spec-like with diff:
                                 ##  - for each test: 'TEST_TITLE'
                                 ##  - for each assertion:
                                 ##     - 'ASSERT_TITLE'
                                 ##     - green|red if ok|not ok
                                 ##     - YAML error props:
                                 ##        - expected and actual: colored diff (using jsondiffpatch)
                                 ##        - "at": pretty printed
                                 ##  - for each unknown line: as is
                                 ##  - final summary:
                                 ##     - number of assertions total|passed|failed
                                 ##     - duration
                                 ##Parses with tap-parser-yaml
                                 ##Sets exit code 1 if any failed assertion
tap-diff                         ##Uses stdin|stdout
TAP-DIFF()->IOSTREAM             ##


TAP-SIMPLE ==>                   ##0.3.1
                                 ##Spec-like with diff:
                                 ##  - for each test: 'TEST_TITLE'
                                 ##  - for each failed assertion:
                                 ##     - 'ASSERT_TITLE'
                                 ##     - YAML error props:
                                 ##        - expected|wanted and actual|found: colored diff (using difflet)
                                 ##        - "at": pretty printed
                                 ##     - show context using YAML error prop "at" (required) then reading file path
                                 ##  - for each unknown line: as is
                                 ##  - final summary:
                                 ##     - number of assertions total|passed|failed
                                 ##     - duration
                                 ##  - shows a spinner
                                 ##Parses with tap-out
                                 ##Sets exit code 1 if any failed assertion
tap-simple                       ##Uses stdin|stdout
TAP-SIMPLE()->IOSTREAM           ##


FAUCET ==>                       ##0.0.1
                                 ##Minimal mocha-spec-like:
                                 ##  - for each test: 'TEST_TITLE'
                                 ##  - for each success assertion: show only last one (unless there is a failed one)
                                 ##  - for each failed assertion:
                                 ##     - 'ASSERT_TITLE', INDEX
                                 ##     - YAML error props: as is
                                 ##  - final summary:
                                 ##     - number of assertions total|passed|failed (using comment # tests|pass)
                                 ##Parses with tap-parser
                                 ##Sets exit code 1 if any failed assertion
faucet [FILE|DIR]                ##Uses stdin|stdout
                                 ##If FILE|DIR, run tape test runner and use its output instead
--width|w NUM                    ##Def: terminal width - 5
FAUCET([OPTS])->IOSTREAM         ##OPTS: width


TAP-SUMMARY ==>                  ##4.0.0
                                 ##Minimal mocha-spec-like:
                                 ##  - for each test:
                                 ##     - 'TEST_TITLE'
                                 ##     - green|red according to any failed assertion
                                 ##     - duration
                                 ##  - for each assertion:
                                 ##     - increment pass|fail counter
                                 ##  - final summary:
                                 ##     - number of assertions total|passed|failed
                                 ##     - each failed assertion:
                                 ##        - 'ASSERT_TITLE'
                                 ##        - YAML props: as is ("stack" prettified)
                                 ##     - comments: each 'COMMENT' and total number
                                 ##     - duration
                                 ##     - plan
                                 ##Parses with tap-out
                                 ##Sets exit code 1 if any failed assertion
tap-summary                      ##Uses stdin|stdout
--no-ansi                        ##
--no-progress                    ##
TAP-SUMMARY([OPTS])->IOSTREAM    ##OPTS:
                                 ##  - ansi BOOL (def: true)
                                 ##  - progress BOOL (def: true): if false, only show summary
                                 ##  - duration BOOL (def: true)


TAP-PESSIMIST ==>                ##1.0.1
                                 ##Minimal failures-only:
                                 ##  - for each failed assertion: INDEX, 'ASSERT_TITLE'
                                 ##Parses with tap-parser
                                 ##Sets exit code 1 if any failed assertion
tap-pessimist                    ##Uses stdin|stdout


TAP-PRETTIFY ==>                 ##Spec-like
                                 ##Uses older Tap parser, and not very pretty, so not documented


TAP-COLORIZE ==>                 ##1.2.0
                                 ##Color assertions in red|green and version in grey
                                 ##Parses with REGEXPs
                                 ##Does not set exit code 1
tap-colorize
--input|i [FILE]                 ##Def: stdin. Can be '-'
--output|o [FILE]                ##Def: stdout. Can be '-'
--info|pass|fail COLOR           ##Def: 'dim', 'bright green', 'bright red'
--reset                          ##Reset color after each line
TAP-COLORIZE([OPTS])->IOSTREAM   ##OPTS: same as CLI


TAP-BAIL ==>                     ##1.0.0
                                 ##Stops stream on first failed assertion, then set exit code 1
                                 ##Parses with tap-parser
tap-bail                         ##Uses stdin|stdout


TAP-NOTIFY ==>                   ##1.0.0
                                 ##Calls NODE-NOTIFIER(OPTS2) (see its doc) on completion with OPTS2:
                                 ##  (if success)
                                 ##  - message 'Test passed. NUM of NUM2 tests passed'
                                 ##  - icon check
                                 ##  (if failure)
                                 ##  - message 'Test failed! NUM of NUM2 tests failed at AT'
                                 ##     - AT is last YAML error property 'at'
                                 ##  - icon cross
                                 ##  - sound 'Basso'
                                 ##Can change with OPTS.passed|failed.title|icon|sound
                                 ##Parses with tap-parser
                                 ##Sets exit code 1 if any failed assertion
tap-notify                       ##Uses stdin|stdout
TAP-NOTIFY([OPTS])->IOSTREAM     ##


TAP-JSON ==>                     ##1.0.0
                                 ##Transforms to OBJ:
                                 ##  - stats:
                                 ##     - asserts|passes|failure NUM
                                 ##  - asserts OBJ_ARR:
                                 ##     - ok BOOL
                                 ##     - name 'ASSERT_TITLE'
                                 ##     - comment 'TEST_TITLE'
                                 ##     - number TEST_NUM
                                 ##     - extra OBJ (YAML error properties, only operator|actual|expected)
                                 ##Parses with tap-parser
                                 ##Does not set exit code to 1
tap-json                         ##Uses stdin|stdout
                                 ##Also transforms to NDJSON (see its doc)
TAP-JSON()->IOSTREAM             ##


TAP-XUNIT ==>                    ##2.3.0
                                 ##Transforms to XUnit format
                                 ##Parses with tap-parser
                                 ##Sets exit code 1 if any failed assertion
tap-xunit                        ##Uses stdin|stdout
--dont-use-comments-as-test-names##
--replace-with-unicode-dot       ##
--package STR                    ##
--strict                         ##
TAP-XUNIT([OPTS])->IOSTREAM      ##OPTS:
                                 ##  - dontUseCommentsAsTestNames BOOL (def: false)
                                 ##  - replaceWithUnicodeDot BOOL (def: false)
                                 ##  - package STR (def: '')
                                 ##  - strict BOOL (def: false)


TAP-TEAMCITY ==>                 ##3.0.2
                                 ##Transforms to Teamcity format
                                 ##Parses with tap-out
                                 ##Sets exit code 1 if any failed assertion
tap-teamcity                     ##Uses stdin|stdout
TAP-TEAMCITY()->IOSTREAM         ##


TAP-MARKDOWN ==>                 ##1.2.1
                                 ##Reuses tap-summary



TAP-MOCHA-REPORTER ==>           ##3.0.6 ???
                                 ##Parses with tap-parser
