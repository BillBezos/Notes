
         
   TRACE  
         



ALTERNATIVES ==>                  #All are Node.js only:
                                  #  - andreasmadsen trace:
																	#     - high-profile
																	#     - uses ASYNC_HOOKS
																	#     - supports stackTraceLimit
																	#     - add async_hooks and timers.js internal code to stack traces (which is a little noisy)
																	#  - longjohn:
																	#     - high-profile but not well maintained
																	#     - monkey-patches setTimeout(), etc. to retrieve current stack before firing callback
																	#     - source map support
																	#     - supports stackTraceLimit
																	#     - does not work with PROMISEs
																	#  - long-promise:
																	#     - not maintained
																	#     - uses ASYNC_HOOKS
																	#     - only for PROMISEs and require manually calling a function on each ERROR
																	#  - node-stackup:
																	#     - not maintained
																	#     - uses old version of ASYNC_HOOKS
																	#  - asynctrace:
																	#     - not maintained
																	#     - uses old version of ASYNC_HOOKS
																	#  - crabdude trycatch:
																	#     - not maintained
																	#     - uses domain API (deprecated)
																	#     - supports stackTraceLimit
																	#     - beautifies error

PERFORMANCE ==>                   #It has some impact on CPU usage, and there is a memory leak.
                                  #I.e. it should be used in development only.
