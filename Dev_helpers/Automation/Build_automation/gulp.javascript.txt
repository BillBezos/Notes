
        
   GULP  
        



ALTERNATIVES ==>                  #  - grunt: more declarative
                                  #  - gulp (prefered): more imperative. Use streams

VERSION ==>                       #Node module (4.0.0)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:              RUN              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CONF ==>                          #Either:
                                  #  - ~/.gulp.EXT
                                  #  - ./.gulp.EXT
                                  #Where EXT can be js|json|y[a]ml|json5|toml|xml|csv|ini|coffee|ts
CONF.flags                        #Like CLI flags, OBJ: continue, compactTasks, tasksDepth, gulpfile, silent, series, logLevel, sortTasks

SHELL COMPLETION ==>              #See online doc

DEBUGGING ==>                     #Can either use:
                                  #  - node --inspect[-brk] $(which gulp) [TASK...]
                                  #  - NODE_OPTIONS=--inspect[-brk] gulp [TASK...]


gulp [TASK...]                    #Run TASK... (def: 'default')
                                  #If a GULP.watch() is present, doesn't exit
                                  #Uses gulp-cli package (2.0.1)

--gulpfile FILE                   #Def: ./gulpfile.js
-f FILE                           #Can be in the following formats (providing the related library is installed):
                                  #  - gulpfile.babel.js
                                  #  - gulpfile.coffee
                                  #  - gulpfile.ts
--cwd DIR                         #Used to search and launch gulpfile.js
--require FILE                    #Do a require(FILE) before reading gulpfile.js

--series                          #If several top-level TASK... run with GULP.series() not GULP.parallel()
--continue                        #Sets UNDERTAKER_SETTLE 'true', i.e. does not stop on error

--[no-]color                      #
--log-level
-L                                #Set several times to set NUM. Can be 1 (error), 2 (warn), 3 (info, def), 4 (debug)
--silent
-S                                #

--tasks-simple                    #Only prints all 'TASK' names
--tasks                           #Only prints all TASK as a tree
-T                                #Prefixed with CONF.description (def: 'Tasks for GULPFILE_PATH')
                                  #Also shows (if set) for each TASK's FUNC (wrapped or not):
                                  #  - FUNC.description STR
                                  #  - FUNC.flags { 'OPT': STR, ... } (CLI flags)
--tasks-json                      #Same but as JSON
--sort-tasks                      #Sort tasks with --tasks[-json] (def: false)
--tasks-depth NUM                 #Max depth with --tasks[-json] (def: none)
--compact-tasks                   #Less depth with --tasks[-json]

--verify ['PACKAGE.json']         #Checks package.json dependencies to see if any Gulp plugin is among a list of blacklisted ones


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             TASKS             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


GULP.Gulp                         #Inherits from Undertaker (see its doc)
GULP                              #Instance of GULP.Gulp

GULP.task('TASK', FUNC)
GULP.task(FUNC)
GULP.task('TASK')->FUNC2
GULP.series|parallel
 (TASK[_ARR],...)->FUNC2
GULP.tree([OPTS])->OBJ
GULP.lastRun(TASK[, NUM])
 ->DATE_NUM|undefined
GULP.on
 ('start|stop|error', FUNC(OBJ))  #Like UNDERTAKER.* (see its doc)

module.exports = {TASK: FUNC, ...}#Same as calling GULP.task('TASK', FUNC)

GULP.src('GLOB'[_ARR][, OPTS])
 ->IOSTREAM
GULP.dest('DIR'[(VINYL)][, OPTS])
 ->IOSTREAM
GULP.symlink('DIR'[(VINL)][,OPTS])
 ->IOSTREAM                       #Like VINYL-FS.* (see its doc)

GULP.watch                        #Like GLOB-WATCHER(...) (see its doc)
 ('GLOB'[_ARR][, OPTS], FUNC)     #WATCHER is an EVENTEMITTER, i.e. can be returned in tasks.
 ->WATCHER                        #FUNC can e.g. be GULP.series|parallel()
                                  #To only fire tasks for the files that changed:
                                  #  - GULP.src(..., { since: GULP.lastRun(FUNC) }): modified since last run of this task
                                  #  - GULP.src(...).pipe(GULP-CHANGED(...)) (see its doc): modified since last write of dest folder of this task
