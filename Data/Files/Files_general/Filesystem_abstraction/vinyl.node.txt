
         
   VINYL  
         



VERSION ==>                     #Node module (2.1.0)
                                #Abstraction of a file (virtual file) content and metadata.


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             CORE              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


new Vinyl([OPTS])               #OPTS are setting VINYL.*
                                #Paths are normalized.

VINYL.path                      #Absolute 'PATH'
VINYL.relative                  #Relative 'PATH'
VINYL.base                      #'DIR' used for relative paths (def: VINYL.cwd)
VINYL.cwd                       #'DIR' (def: process.cwd())
VINYL.dirname|pathname|stem|    #Get|set VINYL.path
 extname                        #VINYL.stem is filename without extname
VINYL.history                   #'PATH'_ARR of all present|past VINYL.path

VINYL.contents                  #BUFFER|ISTREAM|null
VINYL.stat                      #FSSTAT|null
VINYL.symlink                   #'PATH'|null
                                #Must be manually set by the adapter (i.e. not deduced from VINYL.stat)
                                #This is set by ADAPTER-FS

Vinyl.isVinyl(VAL)->BOOL        #
Vinyl.isCustomProp('PROP')->BOOL#Whether it is a core VINYL.* property

VINYL.isBuffer|Stream|Null()
 ->BOOL                         #According to VINYL.contents
VINYL.isDirectory|isSymbolic()
 ->BOOL                         #According to VINYL.stat

VINYL.clone([OPTS])->VINYL2     #OPTS:
                                #  - deep BOOL (def: true)
                                #  - contents BOOL (def: true): if false, re-use BUFFER if contents is BUFFER
VINYL.inspect()
 ->'<File PATH CONTENT_SUMMARY>'#

EXTENDING VINYL ==>             #Should override:
                                #  - isCustomProp(): to return true for new properties, so they are not cloned by default
                                #  - clone(): to specify how to clone new properties


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           ADAPTERS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


ADAPTER                         #Common interface for all adapters of VINYL
ADAPTER.src('FILES'[, OPTS])    #IOSTREAM in Object mode reading files, i.e. where each data event emits a VINYL
 ->IOSTREAM                     #Since is is an IOSTREAM, can be piped in as well, e.g. ADAPTER.src(...).pipe(ADAPTER.src(...))
ADAPTER.dest('DIR'[, OPTS])     #IOSTREAM in Object mode writing files
 ->IOSTREAM                     #Since it is an IOSTREAM, can be piped out as well, e.g. ADAPTER.src(...).pipe(ADAPTER.dest(...)).pipe(ADAPTER.dest(...))

VINYL-FS                       ##Vinyl adapter for the filesystem
                               ##Version 3.0.2
VINYL-FS.src                   ##OPTS:
 ('GLOB'[_ARR][, OPTS])        ##  - any passed to GLOB-STREAM (see its doc)
 ->IOSTREAM                    ##  - buffer BOOL: if true (def), sets full contents as BUFFER instead of STREAMing it
                               ##  - read BOOL:
                               ##     - if false (def: true), do not read files content
                               ##     - i.e. VINYL.contents will be null, and VINYL-FS.dest() will not do anything
                               ##     - faster when files content is not used, e.g. only deleting files
                               ##  - since DATE[_NUM]: filter files by mtime
                               ##  - removeBOM BOOL: if true (def), remove UTF-8 BOM
                               ##  - resolveSymlinks BOOL (def: true)
                               ##  - sourcemaps BOOL: if true (def: false), calls VINYL-SOURCEMAP.add(VINYL),
                               ##    i.e. adds VINYL.sourceMap
                               ##All OPTS can be a FUNC(VINYL)->VAL
VINYL-FS.dest                  ##OPTS:
 ('DIR'[(VINYL)][, OPTS])      ##  - cwd 'PATH' (def: process.cwd()): for relative 'DIR'
 ->IOSTREAM                    ##  - overwrite BOOL (def: true): if input path is same as output
                               ##  - append BOOL (def: false): append instead of overwriting
                               ##  - mode NUM (def: no change): sets FSSTAT.mode for non-directories
                               ##  - dirMode NUM (def: process mode): sets FSSTAT.mode for directories
                               ##  - relativeSymlinks BOOL: whether created symlinks should be absolute (false, def) or relative (true)
                               ##  - sourcemaps BOOL|'PATH':
                               ##     - if true (def: false), appends an inline source map using VINYL.sourceMap
                               ##     - if 'PATH', creates a source map file using VINYL.sourceMap
                               ##All OPTS can be a FUNC(VINYL)->VAL
                               ##If VINYL.symlink 'PATH' exists, a symlink will be created
VINYL-FS.symlink               ##Creates symlinks
 ('DIR'[(VINYL)][, OPTS])      ##OPTS:
 ->IOSTREAM                    ##  - cwd|overwrite|dirMode|relativeSymlinks: like VINYL-FS.dest()


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:           UTILITIES           :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VINYL-BUFFER()                 ##Transforms STREAM into BUFFER (for plugins that do not support STREAM) (1.0.0)

VINYL-MAP(FUNC(VAL, PATH))     ##Returns a VINYL IOSTREAM that transforms VAL to the return VAL2 of FUNC()

VINYL-TRANSFORM(FUNC(PATH))    ##Turns a normal IOSTREAM into a IOSTREAM2 of VINYL objects with BUFFER contents, and returns
                               ##that IOSTREAM2.
                               ##IOSTREAM must be the return value of FUNC(PATH), where PATH are the input files.
                               ##Node module (0.0.1)

VINYL-SOURCE-STREAM(PATH)      ##IOSTREAM3 that turns an input normal IOSTREAM into an output IOSTREAM2 of a single VINYL
                               ##object with STREAM contents and PATH filename.
                               ##Node module (0.1.1)
