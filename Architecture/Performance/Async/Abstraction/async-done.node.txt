
              
   ASYNC-DONE  
              



VERSION ==>                       #1.3.1
                                  #Abstraction over different ways for a function to be async


ASYNC-DONE(FUNC, FUNC2(ERROR,VAL))#Fires FUNC() right away (with no arguments except potential callback FUNC3).
                                  #FUNC can:
                                  #  - throw an ERROR
                                  #  - return PROMISE
                                  #     - error is PROMISE rejected
                                  #  - use callback FUNC3([ERROR])
                                  #  - return STREAM|EVENTEMITTER:
                                  #     - success is 'end|finish' event
                                  #     - error is 'error' event or premature 'close' event
                                  #  - return RES
                                  #     - success is 'complete' event or RES.req 'finish' event
                                  #     - error is 'abort|error' event
                                  #  - return CHILD_PROCESS:
                                  #     - success|error depends on exit code during 'exit' event
                                  #     - error can also be 'error' event
                                  #  - return OBSERVABLE:
                                  #     - using OBSERVABLE.subscribe()
                                  #FUNC cannot be sync, i.e. it must be async.
