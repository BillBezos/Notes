
       
   RET  
       



VERSION ==>                       #0.2.2
                                  #RegExp tokenizer

RET('REGEXP')->ROOT               #

TOKEN                             #Base for all tokens
TOKEN.type                        #One of RET.types.ROOT|GROUP|POSITION|SET|RANGE|REPETITION|REFERENCE|CHAR

ROOT.stack                        #TOKEN_ARR

CHAR                              #Specific character, e.g. 'a'
CHAR.value                        #Unicode codepoint

REPETITION                        #TOKEN*, TOKEN?, TOKEN+, TOKEN{...}
REPETITION.value                  #TOKEN
REPETITION.min|max                #NUM
                                  #* is 0|null
                                  #? is 0|1
                                  #+ is 1|null
                                  #{[NUM][,][NUM2]} is NUM|NUM2 (including null)

SET                               #[...]
SET.not                           #BOOL. True if [^...]
SET.set                           #TOKEN_ARR

RANGE                             #[CHAR-CHAR2]
                                  #Child of SET
RANGE.from|to                     #Unicode codepoint

GROUP                             #(...)
GROUP.stack                       #TOKEN_ARR
GROUP.remember                    #BOOL. false if (?:...)

ROOT|GROUP.options                #TOKEN|... as TOKEN_ARR_ARR

POSITION                          #$NUM
                                  #The NUM is the next sibling as a CHAR
POSITION.value                    #'$'
