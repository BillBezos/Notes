
             
   MINIMATCH  
             



VERSION ==>                         #3.0.4
                                    #Is a Node module
                                    #Globbing matching (does not check any file existence)

new Minimatch.Minimatch             #OPTS (all def: false):
 ('GLOB'[, OPTS])                   #  - nobrace BOOL: by default, uses BRACE-EXPANSION (see its doc)
                                    #  - nocomment BOOL: by default, #... is ignored
                                    #  - nonegate BOOL: by default "!..." will negate everything
                                    #  - flipNegate BOOL: reverse "!..."
                                    #  - noglobstar BOOL: for **
                                    #  - dot BOOL: * includes dotfiles (except . and ..)
                                    #  - noext: disables extended globbing
                                    #  - nocase BOOL: case insensitive
                                    #  - nonull BOOL: if no matches, returns null, instead of STR as is
                                    #  - matchBase BOOL: pattern that doesn't start with / will match only basenames
                                    #  - debug BOOL: prints to stderr
MINIMATCH.pattern                   #'GLOB'
MINIMATCH.options                   #OPTS
MINIMATCH.negate                    #BOOL. true if ! was used
MINIMATCH.comment                   #BOOL. true if # was used
MINIMATCH.empty                     #BOOL. true if 'GLOB' is ''

MINIMATCH.makeRe()->REGEXP|false    #Returns false if 'GLOB' is invalid
MINIMATCH.regexp                    #REGEXP. Must first call makeRe()

MINIMATCH.match(STR)->BOOL          #
MINIMATCH.matchOne(???)


Minimatch(STR, 'GLOB'[, OPTS])->BOOL#Shortcut for MINIMATCH.match()
Minimatch.match
 (STR_ARR, 'GLOB'[, OPTS])->STR_ARR #Same but returns the STR_ARR that matches, instead of BOOL.

Minimatch.makeRe('GLOB'[, OPTS])
 ->REGEXP|false                     #Shortcut for MINIMATCH.makeRe()
Minimatch.filter('GLOB'[, OPTS])
 ->FUNC(STR)->BOOL                  #
