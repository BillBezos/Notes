
             
   MINIMATCH  
             



VERSION ==>                         #3.0.4
                                    #Is a Node module
                                    #Globbing matching (does not check any file existence)

MINIMATCH(STR, 'GLOB'[, OPTS])->BOOL#True if 'GLOB' matches STR.
                                    #OPTS (all def: false):
                                    #  - nobrace BOOL: by default, uses BRACE-EXPANSION (see its doc)
                                    #  - nocomment: by default, #... is ignored
                                    #  - nonegate: by default "!..." will negate everything
                                    #  - flipNegate: reverse "!..."
                                    #  - noglobstar BOOL: for **
                                    #  - dot: same as Bash dotglob
                                    #  - noext: disables extended globbing
                                    #  - nocase: case insensitive
                                    #  - nonull: same as Bash nullglob
                                    #  - matchBase: pattern that doesn't start with / will match only basenames
MINIMATCH.match(STR_ARR, STR2[,OBJ])#Same but returns the STR_ARR that matches, instead of BOOL.
                                    #Returns [] if no matches (don't use nonull)
MINIMATCH.makeRe(STR2[, OBJ])       #Returns the globbing as REGEXP
MINIMATCH.filter(STR2[, OBJ])       #Returns a FUNC(STR) that test the underlying REGEXP

MINIMATCH.cache                     #Underlying LRU-CACHE, by déf. with 100 items.
