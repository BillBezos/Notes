
          
   TRAVIS  
          



VERSION ==>                   #2018-11-01

CONF                          #ROOT_DIR/.travis.yml

GIT CLONING ==>               #Does:
                              #  - git clone --depth=50 --branch=LBRANCH REPO DIR
                              #  - cd DIR
                              #  - git checkout -qf COMMIT
CONF.branches.only|except     #LBRANCH_STR|REGEXP[_ARR]
                              #Whitelist|blacklist (can't use both)
                              #Branch "gh-pages" is excluded by default
EXCLUDING COMMIT              #If commit message includes "[ci skip]"
CONF.git.submodules           #BOOL (def: true): automatically init and update git submodules if .gitmodules

CONF.STEP                     #'BASH'[_ARR] or true (skipped)
                              #  - should use ARR not 'STR; STR2'
                              #STEP (also called "jobs"):
                              #  - before_install:
                              #     - e.g. apt-get update -qq
                              #  - install:
                              #     - e.g. apt-get install -qq (not apt-get upgrade)
                              #  - before_script:
                              #     - e.g. npm install, starts database|server|daemon, set config
                              #  - script:
                              #     - e.g. npm test
                              #  - before_cache:
                              #     - e.g. cleaning up previous cache
                              #  - after_success:
                              #     - e.g. deploying
                              #  - after_failure:
                              #     - e.g. notifications
                              #  - after_script
                              #  - before_deploy
                              #  - deploy
                              #  - after_deploy
                              #  - after_script
PRIVILEGES ==>                #Must use sudo for privileges (don't require password typing), e.g. apt-get

EXIT ==>                      #All STEP are concatenated in one Bash script:
                              #  - so should not use "exit" in STEP STR
                              #  - but can use it in FILE if STEP "./FILE"

FAILED STEPS ==>              #STEP with exit code !== 0:
                              #  - [before_]install, before_script: stops build, stops step
                              #  - script: stops build, doesn't stop step
                              #  - others: doesn't do anything
CONF.matrix.allow_failures    #MATRIX_OBJ_ARR
                              #Do not make build fail when job fails
CONF.matrix.fast_finish       #BOOL (def: false): build marked as finished even if allowed failured not finished
set -e                        #Recommended (exit whole script when one subcommand has exit code !== 0)

CONF.matrix.include|exclude   #MATRIX_OBJ
                              #Do one job for each params combination
                              #Run in parallel

TIMEOUT ==>                   #Job-wise: 50mins (logging stops at 10mins)

LOGGING ==>                   #stdout is logged
set -v                        #Possible (prints script's every subcommands)

CONF.addons.hosts             #HOSTNAME_ARR: customize host names

LINTING ==>                   #Can lint CONF on lint.travis-ci.org

CONF.env.global|matrix        #"ENVVAR=VAL ..."[_ARR]
                              #global doesn't generate new row for build matrix

ENVVAR CI                     #'true'
ENVVAR TRAVIS                 #'true'
ENVVAR CONTINUOUS_INTEGRATION #'true'
ENVVAR LANG                   #'en_US.UTF-8'
ENVVAR LC_ALL                 #'en_US.UTF-8'
ENVVAR PATH                   #Includes ./node_modules/.bin

ENVVAR TRAVIS_BUILD_DIR       #From git clone REPO DIR
ENVVAR TRAVIS_BUILD_ID|NUMBER #
ENVVAR TRAVIS_JOB_ID|NUMBER   #
ENVVAR TRAVIS_TEST_RESULT     #Used in after_success|failure|script STEP

ENVVAR TRAVIS_REPO_SLUG       #'USER/REPO'
ENVVAR TRAVIS_BRANCH          #'LBRANCH'
ENVVAR TRAVIS_TAG             #'TAG'
ENVVAR TRAVIS_COMMIT          #'COMMIT'
ENVVAR TRAVIS_COMMIT_RANGE    #'COMMI2...COMMIT'
ENVVAR TRAVIS_PULL_REQUEST    #'PR_ID|false'

travis encrypt STR            #Encrypts with auto-generated RSA from user account.
                              #Can then put { secure: 'ENCRYPTED' } instead of STR anywhere in CONF
                              #Not available for pull requests.
--add CONF.VAR.VAR2           #Modify CONF directly
--override                    #
--split                       #When receiving several STR... by stdin

travis encrypt-file FILE      #Same for file

travis pubkey                 #Retrieve personal public key
-r USER/REPO                  #
--pem                         #
--fingerprint                 #

ENVVAR TRAVIS_SECURE_ENV_VARS #'true' if some { secure: 'ENCRYPTED' } are used

CONF.language                 #STR: node_js, c, cpp

NODE.JS ==>                   #Def STEP:
                              #  - install: npm install (-S -D assumed)
                              #  - script: npm test
CONF.node_js                  #STR_ARR, among "v0.6|8|10|11"
ENVVAR TRAVIS_NODE_VERSION    #

CONF.services                 #STR[_ARR]
                              #Automatically starts a database server at before_install STEP

CONF.notifications            #Notify according to build status failure|success
CONF.notifications.email      #OBJ:
                              #  - recipients EMAIL[_ARR]|false
                              #  - on_success 'always|never|change' (def: 'change')
                              #  - on_failure 'always|never|change' (def: 'always')
CONF.notifications.webhooks   #OBJ:
                              #  - urls 'URL'[_ARR]:
                              #     - method: POST
                              #     - Authorization: token TOKEN [C], where TOKEN is SHA2(GITHUB_USER, REPO, TRAVIS_TOKEN)
                              #     - payload: JSON with all info
                              #  - on_success|failure (see above)
                              #  - on_start BOOL (def: false)
CONF.notifications.slack      #
CONF.notifications.irc|
 campfire|flowdock|hipchat|
 sqwiggle|slack               #

ENVIRONMENT ==>               #Builds in a VM:
                              #  - Preserves no state between builds
                              #  - Ubuntu 12.04 LTS Server Edition 64 bits, 3GB RAM, CPU 1.5 cores
                              #  - IPv6, localhost works
                              #  - programs:
                              #     - git, imagemagick
                              #     - gcc, clang, make, autotools, cmake, scons
                              #     - curl, wget, openssl, rsync
                              #     - go, python, ruby, java, node
                              #     - mysql, postgresql, sqlite, mongodb, redis, riak, cassandra, neo4j, elasticsearch, couchdb
                              #     - rabbitmq, zeromq
                              #     - phantomjs, xvfb
                              #     - others: check /usr/bin and /bin to make sure it is not there before installing

CONF.deploy                   #DEPLOY_ARR
                              #Automatic deploy on success
DEPLOY.provider               #'PROVIDER'
DEPLOY.on                     #Conditional deploy:
                              #  - repo USER/REPO
                              #  - branch LBRANCH (def: app-*, master) or all_branches true
                              #  - node|jdk|perl|php|python|ruby|scala|go VERSION[_ARR]
                              #  - condition BASH_COMMAND_STR
                              #  - tags true: only when TAG is applied (only if all_branches true)
DEPLOY.skip_cleanup           #BOOL (def: true): cleanup files
DEPLOY.*                      #Other options depend on 'PROVIDER'

NPM_DEPLOY.provider           #'npm'
NPM_DEPLOY.email              #'EMAIL'
NPM_DEPLOY.api_key            #'API_KEY'

GH_RELEASES_DEPLOY.provider   #'releases' (GitHub)
GH_RELEASES_DEPLOY.api-key    #OAUTH_TOKEN: with [public_]repo scope
GH_RELEASES_DEPLOY.
 username|password STR        #Alternative (prefer OAuth)
GH_RELEASES_DEPLOY.file       #FILE[_ARR]

CONF.addons.sauce_connect     #To launch Sauce Connect (not Sauce Labs)
                              #Either:
                              #  - OBJ.username|access_key:
                              #  - OBJ.sauce_connect true
                              #     - alternative using ENVVAR SAUCE_USERNAME|ACCESS_KEY
                              #CAPAB_OBJ:
                              #  - tunnel-identifier: TRAVIS_JOB_NUMBER
                              #  - build: TRAVIS_BUILD_NUMBER
                              #  - tags: TRAVIS_*_VERSION, CI
                              #Access key should be encrypted (i.e. cannot use for pull requests)

CLIENTS ==>                   #  - web app: https://travis-ci.org/USER/REPO
                              #  - CLI: travis.rb
                              #  - wall:
                              #     - http://williamdurand.fr/TravisLight
                              #     - http://egeloen.fr/travis-wall
                              #  - Mobile app:
                              #     - Mantis-CI (iPhone)
                              #     - Jarvis (iPad)
                              #     - Siren of shame (iPhone, Android phone, Android tablet, with Gamification)
                              #  - Desktop notifications: BuildNotify
                              #  - Browser plugin: My Travis (Chrome)

travis                        #CLI
travis login
--github-token OAUTH_TOKEN    #
travis logout                 #

MANUAL TRIGGER ==>            #GitHub REPO > Settings > Webhooks > Test service

REST API                      #Authentication:
                              #  - POST - /auth/github:
                              #     - github_token: GITHUB_OAUTH_TOKEN: scopes "read:org", "user:email",
                              #       "repo_deployment", "repo:status", "write:repo_hook"
                              #     -> access_token: TOKEN
                              #Requests:
                              #  - domain https://api.travis.org/
                              #  - User-Agent [C]
                              #  - Accept: application/vnd.travis-ci.2+json [C]
                              #  - Authorization: token TOKEN [C]
                              #Resources:
                              #  - accounts
                              #  - users:
                              #     - permissions
                              #  - builds
                              #     - commits
                              #  - jobs:
                              #     - annotations
                              #  - repos:
                              #     - branches
                              #     - caches
                              #     - key
                              #     - settings
                              #        - sshkey
                              #     - envvar
                              #  - logs
                              #  - requests
                              #  - hooks
                              #  - broadcasts
                              #  - lint
                              #Methods:
                              #  - GET|POST|PUT|PATCH|DELETE /RESOURCES[/ID]

PRO ==>                       #Features:
                              #  - private GitHub repos
                              #  - cache dependencies (so no need to always run install STEP)

BADGE ==>                     #  - https://img.shields.io/travis[/com]/USER/REPO[/BRANCH].svg
                              #  - https://travis-ci.org/USER/REPO.svg[?branch=LBRANCH]
                              #Def LBRANCH is latest build's
                              #Should link to https://travis-ci.org/USER/REPO[?branch=LBRANCH]
