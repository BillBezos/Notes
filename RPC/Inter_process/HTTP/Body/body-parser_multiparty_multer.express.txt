
               
   BODY-PARSER  
               


VERSION ==>                   #1.18.3

BODY-PARSER.urlencoded|       #Express MIDWR (1.18.3):
json|raw|text([OPTS])         #  - same signature FUNC(REQ, RES, NEXT)
                              #  - but actually does not depend on Express being loaded, nor use RES
                              #Sets REQ.body:
                              #  - urlencoded(): as an OBJ, for Content-Type "application/x-www-form-urlencoded"
                              #  - json(): as an OBJ, for a "application/json"
                              #  - text(): as a STR, for "text/plain"
                              #  - raw(): as a BUFFER, for "application/octet-stream"
                              #If problem, next(ERROR) with 400 status code.
                              #OPTS:
                              #  - type MIME[_ARR][(REQ)] (def: depends on type): only applies to requests with that MIME
                              #    Uses TYPE-IS(REQ, MIME[_ARR]) (see its doc)
                              #  - inflate BOOL (def: true): automatically decompress gzip|deflate encodings
                              #  - limit NUM (def: '100kb') (uses BYTES parsing, see its doc): max request size
                              #  - verify(REQ, RES, BUFFER, ENCODING): should throw error if input is not proper
                              #  (only urlencoded())
                              #  - extended BOOL (def: false):
                              #     - supports VAR[VAR2]=VAL&...
                              #     - by using QS instead of QUERYSTRING, with OPTS: arrayLimit OPTS.limit (max 100),
                              #       parameterLimit OPTS.limit, depth Infinity
                              #  - parameterLimit NUM (def: 1000): max number of parameters
                              #  (only json())
                              #  - strict BOOL (def: true): only parses OBJ|ARR
                              #  - reviver FUNC: passed to JSON.parse(...,FUNC)
                              #  (only text())
                              #  - defaultCharset (def: "utf-8")
                              #Errors (next(ERROR)):
                              #  - 400 (ERROR.type "request.aborted") if client aborted the request
                              #  - 400 (ERROR.type "request.size.invalid") if Content-Length [C] does not match
                              #  - 400 (ERROR.type "entity.parse.failed") if parsing failed
                              #  - 403 on wrong verify()
                              #  - 413 (ERROR.type "entity.too.large") if above OPTS.limit
                              #  - 413 (ERROR.type "parameters.too.many") if above OPTS.parameterLimit
                              #  - 415 (ERROR.type "encoding.unsupported") on unsupported ENCODING,
                              #    or if OPTS.inflate false and should decompress, or if unsupported encoding
                              #  - 415 (ERROR.type "charset.unsupported") on unsupported charset
                              #Uses DEBUG
